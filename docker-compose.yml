services:
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: unless-stopped
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      # KRaft settings
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:9093'
      CLUSTER_ID: 'VjZkYzI3Y2EtY2E3Mi00Y2I5LTg3YzItY2E3YzI3Y2E3MmE0'

      # Listener settings
      KAFKA_LISTENERS: 'PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092,CONTROLLER://kafka:9093'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      
      # Storage and topic settings
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    healthcheck:
      test: ["CMD-SHELL", "kafka-broker-api-versions --bootstrap-server localhost:9092 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    
  # kafka-init-topics:
  #   image: confluentinc/cp-kafka:latest
  #   container_name: kafka-init-topics
  #   depends_on:
  #     kafka:
  #       condition: service_healthy
  #   volumes:
  #     - ./kafka/init-topics.sh:/init-topics.sh
  #   entrypoint: ["sh", "/init-topics.sh"]
  
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    restart: unless-stopped
    ports:
      - "8085:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local-kraft
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://127.0.0.1:8085/actuator/health"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5
    #   start_period: 30s